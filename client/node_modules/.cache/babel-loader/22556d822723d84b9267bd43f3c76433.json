{"ast":null,"code":"import _toConsumableArray from\"/Users/astern3/Documents/dev/react/react-expense-tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/astern3/Documents/dev/react/react-expense-tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export default function appReducer(state,action){switch(action.type){case\"GET_TRANSACTIONS\":return _objectSpread(_objectSpread({},state),{},{loading:false,transactions:action.payload});case\"DELETE_TRANSACTION\":return _objectSpread(_objectSpread({},state),{},{transactions:state.transactions.filter(function(transaction){return transaction._id!==action.payload;})});case\"ADD_TRANSACTION\":return _objectSpread(_objectSpread({},state),{},{transactions:[].concat(_toConsumableArray(state.transactions),[action.payload])});case\"TRANSACTION_ERROR\":return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}}","map":{"version":3,"sources":["/Users/astern3/Documents/dev/react/react-expense-tracker/client/src/context/AppReducer.js"],"names":["appReducer","state","action","type","loading","transactions","payload","filter","transaction","_id","error"],"mappings":"mXAAA,cAAe,SAASA,CAAAA,UAAT,CAAoBC,KAApB,CAA2BC,MAA3B,CAAmC,CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,kBAAL,CACE,sCACKF,KADL,MAEEG,OAAO,CAAE,KAFX,CAGEC,YAAY,CAAEH,MAAM,CAACI,OAHvB,GAKF,IAAK,oBAAL,CACE,sCACKL,KADL,MAEEI,YAAY,CAAEJ,KAAK,CAACI,YAAN,CAAmBE,MAAnB,CACZ,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACC,GAAZ,GAAoBP,MAAM,CAACI,OAA5C,EADY,CAFhB,GAMF,IAAK,iBAAL,CACE,sCACKL,KADL,MAEEI,YAAY,8BAAMJ,KAAK,CAACI,YAAZ,GAA0BH,MAAM,CAACI,OAAjC,EAFd,GAIF,IAAK,mBAAL,CACE,sCACKL,KADL,MAEES,KAAK,CAAER,MAAM,CAACI,OAFhB,GAIF,QACE,MAAOL,CAAAA,KAAP,CAzBJ,CA2BD","sourcesContent":["export default function appReducer(state, action) {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload,\n      };\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction._id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n      };\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}